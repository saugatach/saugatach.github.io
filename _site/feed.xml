<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-03-02T16:10:58-07:00</updated><id>/feed.xml</id><title type="html">Bytes of wisdom</title><subtitle>We share tutorials, ideas, and recipes on this blog on physics, linux, and data analysis</subtitle><author><name>Saugata Chatterjee</name></author><entry><title type="html">How to convert python script to a python package</title><link href="/2021/03/02/how-to-convert-python-script-to-a-python-package.html" rel="alternate" type="text/html" title="How to convert python script to a python package" /><published>2021-03-02T00:00:00-07:00</published><updated>2021-03-02T00:00:00-07:00</updated><id>/2021/03/02/how-to-convert-python-script-to-a-python-package</id><content type="html" xml:base="/2021/03/02/how-to-convert-python-script-to-a-python-package.html">&lt;h1 id=&quot;tldr&quot;&gt;TLDR&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Cluster codes with similar functionality into one directory&lt;/li&gt;
  &lt;li&gt;Create a package
    &lt;ol&gt;
      &lt;li&gt;Create setup files
        &lt;ol&gt;
          &lt;li&gt;Create a setup.py file&lt;/li&gt;
          &lt;li&gt;Create a README.md file&lt;/li&gt;
          &lt;li&gt;Create a LICENSE.txt file&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Install setup tools
        &lt;ol&gt;
          &lt;li&gt;Install setuptools&lt;/li&gt;
          &lt;li&gt;Install wheels&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Test package in a virtual environment&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Create a setup.py file
This is the most important file. It usually looks like this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;from setuptools import setup, find_packages

setup(name='[packagename]',
      version='[version]',
      description='[What the package does]',
      url='[https://github.com/you/stockanalysis]',
      author='[your name]',
      author_email='[you@gmail.com]',
      license='MIT',
      packages=find_packages(include=['stockanalysis']),
      python_requires='&amp;gt;=3'
      )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install the package in developer mode go to the parent folder of your 
package directory and run&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;python -m pip install -e .
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;During any phase of any project it is efficient to create libraries of past code, which we often reuse. 
However, for some projects we are always in a development stage, and we want to keep updating
the code, while keep using it as a library at the same time. The following steps are the most efficient way
of doing this.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Cluster codes with similar functionality into one directory&lt;/li&gt;
  &lt;li&gt;Create a package&lt;/li&gt;
  &lt;li&gt;Test package in a virtual environment&lt;/li&gt;
  &lt;li&gt;Deploy locally&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We will be using python for our discussion.&lt;/p&gt;

&lt;h2 id=&quot;cluster-codes-with-similar-functionality-into-one-directory&quot;&gt;Cluster codes with similar functionality into one directory&lt;/h2&gt;
&lt;p&gt;Once you have collected all python scripts into one directory that you want to convert into a package add the test.py 
and init.py files. The directory structure should look like this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;├── DividendData.py
├── getstockdata.py
├── __init__.py
├── portfolioanalysis.py
└── test.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__init__.py&lt;/code&gt; can be empty at this point. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test.py&lt;/code&gt; should import the packages and make function calls 
to make sure everything loads properly. For example, here we load the packages &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getstockdata&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DividendData&lt;/code&gt;
and create objects from the classes contained in those packages. If the package is not installed properly, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test.py&lt;/code&gt;
will generate errors which are easily traceable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;from getstockdata import GetStockData
from DividendData import DividendData

gdobj = GetStockData('AAPL')
dobj = DividendData('AAPL')
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;create-a-package&quot;&gt;Create a package&lt;/h2&gt;
&lt;p&gt;Once we have our python files in a single folder, creating a python package involves these steps.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Create setup files
    &lt;ol&gt;
      &lt;li&gt;Create a setup.py file&lt;/li&gt;
      &lt;li&gt;Create a README.md file&lt;/li&gt;
      &lt;li&gt;Create a LICENSE.txt file&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Install setup tools
    &lt;ol&gt;
      &lt;li&gt;Install setuptools&lt;/li&gt;
      &lt;li&gt;Install wheel&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Generating the build&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;create-setup-files&quot;&gt;Create setup files&lt;/h3&gt;
&lt;p&gt;We need at least 3 files to create the package build; setup.py, README.md, LICENSE.txt in the parent directory of our 
package.&lt;/p&gt;

&lt;h4 id=&quot;create-a-setuppy-file&quot;&gt;Create a setup.py file&lt;/h4&gt;
&lt;p&gt;This is the most important file. It usually looks like this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;from setuptools import setup, find_packages

setup(name='[packagename]',
      version='[version]',
      description='[What the package does]',
      url='[https://github.com/you/stockanalysis]',
      author='[your name]',
      author_email='[you@gmail.com]',
      license='MIT',
      packages=find_packages(include=['stockanalysis']),
      python_requires='&amp;gt;=3'
      )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The fields are self-explanatory, so replace the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[ ]&lt;/code&gt; by the appropriate values. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find_packages&lt;/code&gt; is not necessary 
but helps if there are lots of similar named packages.&lt;/p&gt;

&lt;h4 id=&quot;create-a-readmemd-file&quot;&gt;Create a README.md file&lt;/h4&gt;
&lt;p&gt;The README.md is a markdown file which should contain detailed description for the package. Commonly, developers include
usage description, bugs, workarounds in the README.md. For our purpose, a short description is sufficient 
(it can also be blank, although that is not recommended).&lt;/p&gt;

&lt;h4 id=&quot;create-a-licensetxt-file&quot;&gt;Create a LICENSE.txt file&lt;/h4&gt;
&lt;p&gt;Head over to &lt;a href=&quot;https://choosealicense.com/&quot;&gt;choosealicense&lt;/a&gt; to select a license of your choice, and copy the license text.
The common choice is MIT. After you copy the license to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LICENSE.txt&lt;/code&gt; file, update the author and date.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;MIT License

Copyright (c) 2021 Me

Permission is hereby granted, free of charge, to 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The project directory will look like this&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;├── LICENSE.txt
├── README.md
├── setup.py
└── stockanalysis
    ├── DividendData.py
    ├── getstockdata.py
    ├── helpers.py
    ├── __init__.py
    ├── portfolioanalysis.py
    ├── settings
    └── test.py
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;install-setup-tools&quot;&gt;Install setup tools&lt;/h3&gt;
&lt;p&gt;If you do not have already installed setuptools, then install them.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;pip install --upgrade setuptools wheel
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;generating-the-build&quot;&gt;Generating the build&lt;/h2&gt;
&lt;p&gt;Now, we can generate a build that can be distributed or install the package in developer mode. 
To generate the build that can be distributed run&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;python setup.py sdist bdist_wheel
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;test-package-in-a-virtual-environment&quot;&gt;Test package in a virtual environment&lt;/h1&gt;
&lt;p&gt;We are more interested in installing the package in developer mode. However, to avoid damage to the system we need to
load up a virtual environment to test run the package.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;virtualenv -p python3 randomtest
source randomtest/bin/activate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once we are in the virtual environment, to install the package in developer mode go to the parent folder of your 
package directory and run&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;python -m pip install -e .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will let test the package in the virtual environment. Once you are satisfied that everything is working as they 
should, deactivate the virtual environment and repeat the install process.&lt;/p&gt;

&lt;p&gt;References: &lt;a href=&quot;https://packaging.python.org/guides/distributing-packages-using-setuptools/&quot;&gt;Packaging and distributing projects&lt;/a&gt;&lt;/p&gt;</content><author><name>Saugata Chatterjee</name></author><summary type="html">TLDR Cluster codes with similar functionality into one directory Create a package Create setup files Create a setup.py file Create a README.md file Create a LICENSE.txt file Install setup tools Install setuptools Install wheels Test package in a virtual environment</summary></entry><entry><title type="html">Multiple Linear Regression with R</title><link href="/2021/02/24/multiple-linear-regression.html" rel="alternate" type="text/html" title="Multiple Linear Regression with R" /><published>2021-02-24T00:00:00-07:00</published><updated>2021-02-24T00:00:00-07:00</updated><id>/2021/02/24/multiple-linear-regression</id><content type="html" xml:base="/2021/02/24/multiple-linear-regression.html">&lt;h1 id=&quot;multiple-linear-regression-with-r&quot;&gt;Multiple linear regression with R&lt;/h1&gt;

&lt;p&gt;We demonstrate multiple linear regression (MLR) with R using a case study. Here we perform an “Analysis of grades for an algebra class”. In this case study, we use multiple analytical tools including multiple linear regression, model selection with p-values, and model verification with a test-train split of data.&lt;/p&gt;

&lt;h2 id=&quot;objective&quot;&gt;Objective&lt;/h2&gt;

&lt;p&gt;Identify predictors of attrition and evaluate methods to measure the difficulty levels of exams&lt;/p&gt;

&lt;h2 id=&quot;measuring-exam-difficulty-by-comparing-the-medians&quot;&gt;Measuring exam difficulty by comparing the medians&lt;/h2&gt;

&lt;p&gt;If the student competence remains constant then exams with similar difficulty levels should have the same median score. The spread of the data, or the standard deviation, however, implies a degree of preparedness or level of understanding among the students. So the standard deviation should decrease over time as the course progresses. We plot the data for MH140 Fall 2019 class and observe the trend that is predicted by logic. The data demonstrate that the tests are of the same difficulty level.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/XEC0JkSYL_lxzCv6LmLnEV249ZSWO47mBX6zS_xGsS2Dl7JmoNefdMzVfODvAJzDYs_SPwUW_RyOUDUCEsOMhdFNAaINJwIADfP9qFqCvi9fGAx0F1DDjKMp--ppiR2PWsTI697R&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This figure demonstrates that ideally, the median score will remain the same across exams while the standard deviation will decrease over time.&lt;/p&gt;

&lt;h3 id=&quot;r-code&quot;&gt;R code&lt;/h3&gt;

&lt;p&gt;The preparation of data requires some effort as the LMS(Learning Management Software) exports all data. We have to select only the relevant columns of data, which are the weighted totals of the grading elements. After extracting only the grading element totals, we compile them into an excel spreadsheet and export it to CSV format, which is then imported into R using the following code.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;&amp;gt; df = read.csv(&quot;fall2019.csv&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then a boxplot of quiztotal, midterm, final, and Grade is plotted to observe the medians and the standard deviation of the score.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;&amp;gt; boxplot(df$quiztotal, df$midterm, df$final, df$Grade, 
    + names = c(&quot;QuizTotal&quot;, &quot;Midterm&quot;, &quot;Final&quot;, &quot;OverallGrade&quot; ) , 
    + col =&quot;deepskyblue2&quot;, ylab=&quot;Grades (%)&quot;, 
    + main = &quot;Comparing the medians of grading elements&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;names – labels each boxplot. The names have to be provided as a vector with c(“label1”, “label2”, ..)&lt;br /&gt;
ylab – labels y-axis&lt;br /&gt;
main  – boxplot title&lt;br /&gt;
col – color&lt;/p&gt;

&lt;h2 id=&quot;identifying-predictors-of-attrition&quot;&gt;Identifying predictors of attrition&lt;/h2&gt;

&lt;p&gt;We analyze the gradebook data to identify which grading elements can be the best predictors of failure rates in a class. For this, we clean the data and prepare it for analysis for statistical software. Then we performed multiple linear regression on the data using the variable &lt;strong&gt;Grade&lt;/strong&gt; (which is the final overall grade that the student receives in the class) as the response variable. The regression is performed against the following variables.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HWtotal q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 quiztotal midterm final&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;results-of-fitting-linear-regression-models&quot;&gt;Results of fitting linear regression models&lt;/h2&gt;

&lt;p&gt;We can fit against all predictor variables by manually typing in the predictor variables, like this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;&amp;gt; lm(Grade ~ HWtotal + quiztotal + midterm + final, data=df)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, instead of fitting the models manually we will first iterate over all possible models.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;&amp;gt; lapply(colnames(df)\[2:17\], 
    + function(x) summary(lm(paste(&quot;Grade&quot;, &quot; ~ &quot;, x),
    + data = df))$coefficients)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;strong&gt;lapply&lt;/strong&gt;() function extracts the column names, which are the predictor variables, and iteratively sends them to the function fittingly called &lt;strong&gt;function(x)&lt;/strong&gt;. Inside the function, &lt;strong&gt;function(x)&lt;/strong&gt;, the paste function generates the linear model (e.g. Grade ~ midterm) by pasting the predictor variables passed to it by the &lt;strong&gt;lapply()&lt;/strong&gt; function. The &lt;strong&gt;lm()&lt;/strong&gt; function then fits the model, and then the &lt;strong&gt;summary()&lt;/strong&gt; extracts the coefficients. Here are the results for all possible linear models with one predictor variable. There are two methods of model selection – the p-value method and the adjusted R-squared method. We are going to use the p-value method since it is simpler to implement.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;Estimate&lt;/th&gt;
      &lt;th&gt;p-values&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;HWtotal&lt;/td&gt;
      &lt;td&gt;0.6031689&lt;/td&gt;
      &lt;td&gt;0.03585739&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q1&lt;/td&gt;
      &lt;td&gt;0.09184575&lt;/td&gt;
      &lt;td&gt;2.06E-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q2&lt;/td&gt;
      &lt;td&gt;0.1357377&lt;/td&gt;
      &lt;td&gt;1.40E-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q3&lt;/td&gt;
      &lt;td&gt;0.1258918&lt;/td&gt;
      &lt;td&gt;4.05E-02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q4&lt;/td&gt;
      &lt;td&gt;0.1520878&lt;/td&gt;
      &lt;td&gt;1.17E-04&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q5&lt;/td&gt;
      &lt;td&gt;0.08175822&lt;/td&gt;
      &lt;td&gt;4.98E-02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q6&lt;/td&gt;
      &lt;td&gt;0.04201964&lt;/td&gt;
      &lt;td&gt;3.89E-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q7&lt;/td&gt;
      &lt;td&gt;0.2545848&lt;/td&gt;
      &lt;td&gt;1.08E-03&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q8&lt;/td&gt;
      &lt;td&gt;0.06235148&lt;/td&gt;
      &lt;td&gt;3.57E-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q9&lt;/td&gt;
      &lt;td&gt;0.1817256&lt;/td&gt;
      &lt;td&gt;3.35E-02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q10&lt;/td&gt;
      &lt;td&gt;0.07730769&lt;/td&gt;
      &lt;td&gt;1.20E-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q11&lt;/td&gt;
      &lt;td&gt;0.03647799&lt;/td&gt;
      &lt;td&gt;4.06E-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;quiztotal&lt;/td&gt;
      &lt;td&gt;0.4686029&lt;/td&gt;
      &lt;td&gt;3.42E-06&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;midterm&lt;/td&gt;
      &lt;td&gt;0.3968172&lt;/td&gt;
      &lt;td&gt;4.26E-05&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;final&lt;/td&gt;
      &lt;td&gt;0.4469315&lt;/td&gt;
      &lt;td&gt;0.0045930408&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;From the results, it is clear the &lt;em&gt;quiz4&lt;/em&gt;, &lt;em&gt;midterm&lt;/em&gt;, and &lt;em&gt;quiztotal&lt;/em&gt; are the best predictors of the final grades.&lt;/p&gt;

&lt;h2 id=&quot;interpretation-of-results&quot;&gt;Interpretation of results&lt;/h2&gt;

&lt;p&gt;The following regression models were chosen for their low p-values.&lt;/p&gt;

&lt;p&gt;Model&lt;/p&gt;

&lt;p&gt;p-values&lt;/p&gt;

&lt;p&gt;Grade ~ midterm&lt;/p&gt;

&lt;p&gt;4.26E-05&lt;/p&gt;

&lt;p&gt;Grade ~ q4&lt;/p&gt;

&lt;p&gt;1.17E-04&lt;/p&gt;

&lt;p&gt;Grade ~ HWtotal&lt;/p&gt;

&lt;p&gt;0.03586&lt;/p&gt;

&lt;p&gt;Grade ~ HWtotal + quiztotal + midterm + final&lt;/p&gt;

&lt;p&gt;2.20E-16&lt;/p&gt;

&lt;p&gt;Quiztotal is replaced with q4 instead, although quiztotal with the lowest p-value has the highest predictive power. The logic is that, since quiztotal is an aggregate of 11 quizzes, regression against it is really a regression with 11 variables with 10 constraints (the relative coefficients are fixed). We see that the model &lt;em&gt;Grade ~ HWtotal + quiztotal + midterm + final&lt;/em&gt; has the best predictive power. However, we only have access to the final grades at the very end of the semester so it is of little value at the beginning of the semester when predicting student success can only be based on a few weeks of data.&lt;/p&gt;

&lt;p&gt;The p-values signify that the homework is the worst predictor of the final overall grade while the q4 is the best predictor. This is known to the instructor for some time from experience. The data confirms it statistically. Since the students can use external assistance for their homework assignments, the variable HWtotal has no impact on the final grades. &lt;em&gt;Quiz 4 consists of solving linear equations. Students who are unable to learn the simple techniques of solving a linear equation, probably do not have the skills or aptitude to learn the more advanced topics in the class. This implies that the student failure rate can be accurately predicted by week 5.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let us put that theory to test using a test-train stress test to the model. Since the dataset size is so small it is necessary to use bootstrap methods. However, for simplicity, we are going, to begin with, a simple test-train split of the data. In a test-train split, the data is randomly sorted into a training set and a test set according to a predetermined ratio called the &lt;strong&gt;test-train split ratio&lt;/strong&gt;. The models are then trained on the training set and then tested on the test set to see which model provides the best fit. We will be fitting linear models only at the beginning, so bias-variance tradeoff does not factor in yet. Later, however, we will generalize to higher dimensional models and explore the bias-variance tradeoff.&lt;/p&gt;

&lt;h3 id=&quot;linear-regression-using-test-train-split&quot;&gt;Linear regression using test-train split&lt;/h3&gt;

&lt;p&gt;We randomly select 80% of the data into a training sample and the remaining 20% is reserved as test data. We train our models on the training samples (which were randomly selected) using the model Grade ~ Quiz4grades which is a linear regression model.&lt;/p&gt;

&lt;p&gt;&amp;gt; gradefit = lm(Grade ~ q4, data = df, subset = trainset)&lt;/p&gt;

&lt;p&gt;Estimate&lt;/p&gt;

&lt;p&gt;Std. Error&lt;/p&gt;

&lt;p&gt;t -value&lt;/p&gt;

&lt;p&gt;p-values&lt;/p&gt;

&lt;p&gt;(Intercept)&lt;/p&gt;

&lt;p&gt;70.5059&lt;/p&gt;

&lt;p&gt;2.59796&lt;/p&gt;

&lt;p&gt;27.139&lt;/p&gt;

&lt;p&gt;3.64E-14&lt;/p&gt;

&lt;p&gt;q4&lt;/p&gt;

&lt;p&gt;0.15557&lt;/p&gt;

&lt;p&gt;0.03332&lt;/p&gt;

&lt;p&gt;4.669&lt;/p&gt;

&lt;p&gt;0.000303&lt;/p&gt;

&lt;h3 id=&quot;test-the-model-on-the-test-data-set&quot;&gt;Test the model on the test data set&lt;/h3&gt;

&lt;p&gt;&amp;gt; predict(gradefit,df)[-trainset]&lt;/p&gt;

&lt;p&gt;Student #&lt;/p&gt;

&lt;p&gt;3&lt;/p&gt;

&lt;p&gt;6&lt;/p&gt;

&lt;p&gt;7&lt;/p&gt;

&lt;p&gt;17&lt;/p&gt;

&lt;p&gt;20&lt;/p&gt;

&lt;p&gt;Predicted Grade&lt;/p&gt;

&lt;p&gt;86.06334&lt;/p&gt;

&lt;p&gt;80.92938&lt;/p&gt;

&lt;p&gt;75.63985&lt;/p&gt;

&lt;p&gt;75.63985&lt;/p&gt;

&lt;p&gt;86.06334&lt;/p&gt;

&lt;p&gt;Actual Grade&lt;/p&gt;

&lt;p&gt;81&lt;/p&gt;

&lt;p&gt;68&lt;/p&gt;

&lt;p&gt;74&lt;/p&gt;

&lt;p&gt;74&lt;/p&gt;

&lt;p&gt;84&lt;/p&gt;

&lt;p&gt;Error&lt;/p&gt;

&lt;p&gt;-5.06334&lt;/p&gt;

&lt;p&gt;-12.92938&lt;/p&gt;

&lt;p&gt;-1.63985&lt;/p&gt;

&lt;p&gt;-1.63985&lt;/p&gt;

&lt;p&gt;-2.06334&lt;/p&gt;

&lt;p&gt;The MSE (mean squared error) on the test data set is &lt;strong&gt;MSE ~ 40.&lt;/strong&gt; The errors are distributed according to the t-distribution. Therefore, the confidence interval for the errors at the 95% CI can be calculated using the t-distribution and they are (-3.4, +1.3).&lt;/p&gt;

&lt;p&gt;&amp;gt; mean(((df$Grade - predict(gradefit,df))[-trainset])^2)
40.48838
&amp;gt; errs = (df$Grade - predict(gradefit,df))
&amp;gt; mean(errs)
-1.060716
&amp;gt; sd(errs)
5.19508
&amp;gt; mean(errs) + qt(0.975, df=16)*sd(errs)/sqrt(22)
1.28728
&amp;gt; mean(errs) - qt(0.975, df=16)*sd(errs)/sqrt(22)
-3.408713&lt;/p&gt;

&lt;p&gt;This means that every prediction the model makes is accurate within -3.4 and 1.3 of the actual grade. The model can be written mathematically as follows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Grade = 0.156*Quiz4grade + 70.5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is remarkable since 70 is the passing grade. We see that Quiz 4 performance directly impacts the pass-fail rate. What we have really accomplished is that we have identified the predictor of the attrition rate for this class.&lt;/p&gt;

&lt;h3 id=&quot;observation&quot;&gt;Observation&lt;/h3&gt;

&lt;p&gt;The models trained on available data works really well in the same class of students. This means if the first 4 weeks of data are available on a group of students, their future performance can be predicted with 95% accuracy within 3.4 points of the actual final grade.&lt;/p&gt;</content><author><name>Saugata Chatterjee</name></author><summary type="html">Multiple linear regression with R</summary></entry><entry><title type="html">Probability of developing immunity from Covid vaccine</title><link href="/2021/02/24/probability-of-developing-immunity-from-covid-vaccine.html" rel="alternate" type="text/html" title="Probability of developing immunity from Covid vaccine" /><published>2021-02-24T00:00:00-07:00</published><updated>2021-02-24T00:00:00-07:00</updated><id>/2021/02/24/probability-of-developing-immunity-from-covid-vaccine</id><content type="html" xml:base="/2021/02/24/probability-of-developing-immunity-from-covid-vaccine.html">&lt;p&gt;Recently, I came across this question which someone claimed to lead to a fallacy.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;If the covid vaccine has 95% efficacy, then if we sample 100 people, 
what is the probability that 95 of them develop immunity?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The answer.&lt;br /&gt;
P(95 immune, 5 not immune) = \({}^{100}C_{95} \times (0.95)^{95} \times (0.05)^5 = 0.18 = 18\%\)&lt;/p&gt;

&lt;p&gt;The answer to this question seems fallacious, but it is not.&lt;/p&gt;

&lt;p&gt;But why 18% and not 95%. Aren’t we supposed to get 95% probability that 95 people develop immunity 
from the covid vaccine?&lt;/p&gt;

&lt;p&gt;There is no fallacy about the population immunity being 95% and sample immunity being 18%. The probability that exactly 
95 out of 100 gets immunity is 18%. What we really want to know is what is the probability that at least 95 out of 
100 develops immunity.&lt;/p&gt;

&lt;p&gt;All possible combinations of
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(# of immune, # of non-immune)&lt;/code&gt; under the constraint that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# of immune + # of non-immune = 100&lt;/code&gt;
are allowed to occur with a finite probability. Not all those probabilities are equal. Some are 
more probable, and some are less probable. Plotting the probabilities produces the following graph.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/binomial1.png&quot; alt=&quot;drawing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the plot we see that the probability peaks around 95 and then trails off in either direction. 
So, although the values sharply peak at 95, the probability of getting 94 immune individuals (out 
of 100) is similar to that of getting 95 or 96. In fact, a series of values which are not 95 have 
finite probabilities. The correct question to ask would be&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;If the covid vaccine has 95% efficacy, then if we sample 100 people, 
what is the expected number of immune individuals?
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The answer: 95.
While the probability for 95 immune individuals from a group of 100 is 18%, the expected value 
(the expected value is the mean value) is \(\Sigma ( n(x) p(x) ) = 95\).&lt;/p&gt;</content><author><name>Saugata Chatterjee</name></author><summary type="html">Recently, I came across this question which someone claimed to lead to a fallacy.</summary></entry><entry><title type="html">Python script to generate blog post filenames from titles</title><link href="/2021/02/05/python-script-to-generate-blog-post-filenames-from-titles.html" rel="alternate" type="text/html" title="Python script to generate blog post filenames from titles" /><published>2021-02-05T00:00:00-07:00</published><updated>2021-02-05T00:00:00-07:00</updated><id>/2021/02/05/python-script-to-generate-blog-post-filenames-from-titles</id><content type="html" xml:base="/2021/02/05/python-script-to-generate-blog-post-filenames-from-titles.html">&lt;p&gt;Jekyll makes it easy to publish posts. The url for the post is automatically generated from the file name. 
The date and time is extracted too. We, however, need to provide a filename for the markdown file which 
becomes its URL. 
The following set of python commands will generate the filename from the post title and save us the 
trouble of typing the long filename. We are running the commands in an interpreter but this can be 
automated into a script.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GCC&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linux&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;help&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;copyright&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;credits&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;license&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'index.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.jekyll-cache'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'jekyll-theme-clean-blog.gemspec'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.idea'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'README.md'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'screenshot.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'gulpfile.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'about.md'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_sass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'assets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_config.yml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_includes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_layouts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.gitignore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Gemfile.lock'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'posts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_site'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'LICENSE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.git'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_posts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'bin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'contact.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'img'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Gemfile'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'package-lock.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.travis.yml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'package.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'_posts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'2020-01-26-dinosaurs.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'2021-02-05-post1.md'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.ipynb_checkpoints'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'2020-02-04-getting-attendance-from-ringcentral-chat-messages.md'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'renameposts.ipynb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'2021-02-05-post1.md'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(.*?)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;             &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;             &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filenames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;explanation&quot;&gt;Explanation&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'_posts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;changes to the directory containing the posts.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;lists the file name so that we can select the correct markdown file containing the post.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;opens the file. In this case we chose the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2021-02-05-post1.md&lt;/code&gt; which doesn’t have proper name yet.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;will keep looping till we find the lines containing the data for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;date&lt;/code&gt; and then it will &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;break&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;reads the next line into a variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;line&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(.*?)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here, we use the regex pattern match using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re&lt;/code&gt; library. 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.findall()&lt;/code&gt; searches for the regular expression (regex) pattern &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'title: \&quot;(.*?)\&quot;'&lt;/code&gt; and every time it 
finds &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title: &quot;&amp;lt;your title&amp;gt;&quot;&lt;/code&gt; it extracts &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;your title&amp;gt;&lt;/code&gt;. If re() doesn’t find anything, it returns an empty list.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;if the list returned by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.findall()&lt;/code&gt; is empty then the line does not contain the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; and we move on.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;if the list returned by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.findall()&lt;/code&gt; is not empty, then we have the title in the first element of 
the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; variable, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title[0]&lt;/code&gt;. 
We first convert it to lowercase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title[0].lower()&lt;/code&gt; and then substitute the spaces in the title with 
hyphens using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.sub()&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.sub()&lt;/code&gt; performs substitution of regex pattern using the format 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.sub(pattern to replace, replace pattern, string)&lt;/code&gt;.
Once we found the title and extracted it, we break out of the loop.&lt;/p&gt;

&lt;h2 id=&quot;the-full-script&quot;&gt;The full script&lt;/h2&gt;
&lt;p&gt;The following script gets the full blog title from both the date and the title.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/bin/env python
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(.*?)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;postdate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date: (\d\d\d\d-\d\d-\d\d)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;postdate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;fullfilename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'.md'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fullfilename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Running the script on our sample markdown file with the following content&lt;/p&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Python&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;filenames&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;titles&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2020-02-05&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/img/posts/01.jpg'&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;will generate the following filename.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2020-02-05-python-script-to-read-generate-blog-post-filenames-from-titles.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can modify this script to accept the current filename as an argument (using argparse for example).
We leave that as an exercise for the reader.&lt;/p&gt;</content><author><name>Saugata Chatterjee</name></author><summary type="html">Jekyll makes it easy to publish posts. The url for the post is automatically generated from the file name. The date and time is extracted too. We, however, need to provide a filename for the markdown file which becomes its URL. The following set of python commands will generate the filename from the post title and save us the trouble of typing the long filename. We are running the commands in an interpreter but this can be automated into a script.</summary></entry><entry><title type="html">Use Latex in markdown for Jekyll blog</title><link href="/2021/02/05/use-latex-in-markdown-for-jekyll-blog.html" rel="alternate" type="text/html" title="Use Latex in markdown for Jekyll blog" /><published>2021-02-05T00:00:00-07:00</published><updated>2021-02-05T00:00:00-07:00</updated><id>/2021/02/05/use-latex-in-markdown-for-jekyll-blog</id><content type="html" xml:base="/2021/02/05/use-latex-in-markdown-for-jekyll-blog.html">&lt;p&gt;\(\LaTeX\) is very convenient is writing complex equations. It is an indispensable tool for 
scientists. However, while publishing a static Jekyll blog it is difficult to enter Greek symbols.
This is because Jekyll doesn’t come with native support to render \(\LaTeX\). However, MathJax is 
widely available, and we can add math rendering support to our webpages using MathJax. To add 
MathJax support to our blog we will need to add the following code snippet to every HTML file in the 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/_layouts&lt;/code&gt; folder. The code goes before the HTML tags.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/x-mathjax-config&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;MathJax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;tex2jax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;skipTags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;noscript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;textarea&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;inlineMath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;processEscapes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;TeX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;equationNumbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;autoNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;AMS&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;async&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js?config=TeX-AMS_CHTML&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See an example of the 
&lt;a href=&quot;https://github.com/j3soon/minimal-mistakes-template/blob/master/_includes/scripts.html&quot;&gt;usage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://rangerway.com/way/latex-note-and-jekyll&quot;&gt;LaTeX Notes &amp;amp; MathJax in Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Saugata Chatterjee</name></author><summary type="html">\(\LaTeX\) is very convenient is writing complex equations. It is an indispensable tool for scientists. However, while publishing a static Jekyll blog it is difficult to enter Greek symbols. This is because Jekyll doesn’t come with native support to render \(\LaTeX\). However, MathJax is widely available, and we can add math rendering support to our webpages using MathJax. To add MathJax support to our blog we will need to add the following code snippet to every HTML file in the /_layouts folder. The code goes before the HTML tags.</summary></entry></feed>
